<Window x:Class="TG.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fa="http://schemas.fontawesome.com/icons/"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:cmd="clr-namespace:TG.Infrastructure.Commands"
        xmlns:company="clr-namespace:TG.Models.Company"
        xmlns:vm="clr-namespace:TG.ViewModels" 
        mc:Ignorable="d"
        Title="{Binding Title}" 
        Height="450" Width="800">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <DockPanel x:Name="MainPanel">

        <Menu x:Name="MainMenu" DockPanel.Dock="Top" Margin="0,0,0,5">
            <MenuItem Header="Файл">
                <MenuItem Header="Выход" Command="{Binding CloseAplicationCommand}"/>
            </MenuItem>
            <MenuItem Header="Помощь">
                <MenuItem Header="О программе"/>
            </MenuItem>
        </Menu>

        <ToolBar DockPanel.Dock="Top" Margin="0,0,0,5">

            <Button Width="25" Height="25">
                <Button.Content>
                    <fa:ImageAwesome Icon="Solid_WindowClose"/>
                </Button.Content>
                <Button.Command>
                    <cmd:CloseAplicationCommand/>
                </Button.Command>
            </Button>

            <Separator/>

            <Button Width="25" Height="25" Command="{StaticResource CloseAplicationCommand}">
                <Button.Content>
                    <fa:ImageAwesome Icon="Regular_WindowClose" Foreground="Green"/>
                </Button.Content>
            </Button>

            <Separator/>

            <ToggleButton Width="25" Height="25">
                <ToggleButton.Template>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ContentPresenter/>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <fa:ImageAwesome Icon="Solid_Pause" Foreground="Green"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <fa:ImageAwesome Icon="Solid_Play" Foreground="Red"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </ToggleButton.Template>
            </ToggleButton>

            <Separator/>

            <Button Width="25" Height="25" Command="{Binding ChangeMutablePropertyCommand}">
                <Button.Template>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentPresenter/>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding MutableProperty}" Value="False">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <fa:ImageAwesome Icon="Solid_Play" Foreground="Red"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding MutableProperty}" Value="True">
                                <Setter Property="Content">
                                    <Setter.Value>
                                        <fa:ImageAwesome Icon="Solid_Pause" Foreground="Green"/>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Button.Template>
            </Button>

            <Separator/>

            <TextBox Foreground="LightGray" Width="200">Поиск...</TextBox>

            <Separator/>

            <fa:SvgAwesome Icon="Solid_ArrowLeft" Height="20" Margin="2">
                <fa:SvgAwesome.InputBindings>
                    <MouseBinding Command="{Binding ChangeTabIndexCommand}" CommandParameter="-1" MouseAction="LeftClick" />
                </fa:SvgAwesome.InputBindings>
            </fa:SvgAwesome>
            <fa:SvgAwesome Icon="Solid_ArrowRight" Height="20" Margin="2">
                <fa:SvgAwesome.InputBindings>
                    <MouseBinding Command="{Binding ChangeTabIndexCommand}" CommandParameter="+1" MouseAction="LeftClick" />
                </fa:SvgAwesome.InputBindings>
            </fa:SvgAwesome>

            <Separator/>

        </ToolBar>

        <StatusBar x:Name="MainStatusBar" DockPanel.Dock="Bottom">

            <StatusBarItem>
                <TextBlock x:Name="StatusText" Text="{Binding MutableProperty}"  Width="150"></TextBlock>
            </StatusBarItem>

            <StatusBarItem>
                <ProgressBar Height="12" Width="150" Value="{Binding Progress}"></ProgressBar>
            </StatusBarItem>

            <StatusBarItem>
                <Slider Width="150" Value="{Binding Progress}" Minimum="0" Maximum="100"/>
            </StatusBarItem>

        </StatusBar>

        <TabControl x:Name="MainTabControl" Margin="0,0,0,5" SelectedIndex="{Binding SelectedPageIndex}">

            <TabItem Header="Разнородные данные">
                <Grid>
                    <Grid.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="../../Resources/DataTemplates/CompositeListItemsDataTemplates.xaml"/>
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <GroupBox Grid.Column="0" Header="Элементы" Margin="5,0,5,5">
                        <ListBox ItemsSource="{Binding CompositeCollection}" 
                                 SelectedItem="{Binding SelectedCompositeValue}" 
                                 Margin="3">
                        </ListBox>
                    </GroupBox>

                    <GroupBox Grid.Column="1" Header="Выбранный элемент" Margin="0,0,5,5">
                        <ContentControl Content="{Binding SelectedCompositeValue}" 
                                        FontSize="30" 
                                        HorizontalAlignment="Center" 
                                        VerticalAlignment="Center">
                        </ContentControl>
                    </GroupBox>

                </Grid>
            </TabItem>

            <TabItem Header="Пользователи">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <GroupBox Grid.Column="0" Header="Отделы" Margin="5,0,5,5">
                        <DockPanel>
                            <UniformGrid DockPanel.Dock="Bottom" Rows="1" Margin="5">
                                <Button Content="Добавить" Command="{Binding CreateDepartmentCommand}" Style="{StaticResource PrimaryButton}"/>
                                <Button Content="Удалить" Command="{Binding DeleteDepartmentCommand}" CommandParameter="{Binding SelectedDepartment}" Style="{StaticResource PrimaryButton}"/>
                            </UniformGrid>
                            <ListBox Margin="5,5,5,0" 
                                 ItemsSource="{Binding Departments}" 
                                 SelectedItem="{Binding SelectedDepartment}" 
                                 SelectedIndex="0"
                                 ItemContainerStyle="{StaticResource ContainerStyle}">
                                <!--DisplayMemberPath="Name"-->
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="company:Department">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Name}" x:Name="TextView"/>
                                            <TextBlock Text="{Binding Users.Count, StringFormat={}  [Пользователей: {0}]}"/>
                                        </StackPanel>
                                        <!-- чето не фурычит, надо перекинуть в стили
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Users.Count}" Value="0">
                                                <Setter TargetName="TextView" Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                        -->
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </DockPanel>
                    </GroupBox>

                    <GroupBox Grid.Column="1" 
                              HeaderStringFormat="Пользователи - отдел &quot;{0}&quot;" 
                              Header="{Binding SelectedDepartment.Name, FallbackValue='Пользователи', TargetNullValue='Отдел не выбран'}" 
                              Margin="0,0,5,5">
                        <DataGrid Margin="5" 
                                  ItemsSource="{Binding SelectedDepartment.Users}" 
                                  AutoGenerateColumns="False"
                                  CanUserAddRows="False"
                                  GridLinesVisibility="Vertical"
                                  VerticalGridLinesBrush="DarkGray"
                                  AlternatingRowBackground="#FFE6E2E2"
                                  MinRowHeight="26" 
                                  SelectionMode="Single"
                                  CellStyle="{StaticResource DataGridContentCellCentering}">
                            <!--внешний вид выделенных строк
                            <DataGrid.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Gray"/>
                            </DataGrid.Resources>
                            <DataGrid.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent"/>
                            </DataGrid.Resources>
                            <DataGrid.CellStyle>
                                <Style TargetType="DataGridCell">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="White" />
                                            <Setter Property="Foreground" Value="Black" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.CellStyle>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="BorderBrush" Value="Orange" />
                                            <Setter Property="BorderThickness" Value="1" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>-->
                            <DataGrid.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#FFFF8000"/>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black"/>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Имя" Binding="{Binding Name}" Width="Auto" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Отчество" Binding="{Binding Patronymic}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Фамилия" Binding="{Binding Surname}" IsReadOnly="True"/>
                                <!--<DataGridTextColumn Header="Дата рождения" Binding="{Binding Birthday, StringFormat=dd MMMM yyyy}"/>-->
                                <DataGridTemplateColumn Header="Дата рождения" IsReadOnly="False">
                                    <!--<DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="company:User">
                                            <DatePicker SelectedDate="{Binding Birthday}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>-->
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate DataType="company:User">
                                            <TextBlock Text="{Binding Birthday, StringFormat=dd MMMM yyyy}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                    <DataGridTemplateColumn.CellEditingTemplate>
                                        <DataTemplate DataType="company:User">
                                            <DatePicker SelectedDate="{Binding Birthday}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellEditingTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Рейтинг" Binding="{Binding Rating}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Отдел" Binding="{Binding DataContext.SelectedDepartment.Name, RelativeSource={RelativeSource AncestorType=DataGrid}}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Заметки" Binding="{Binding Description}" Width="*" IsReadOnly="False"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </GroupBox>
                </Grid>
            </TabItem>

            <TabItem>
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Вкладка 1"/>
                        <Button Height="16" Width="16" Margin="4,0,0,0" Command="{StaticResource CloseTabItemCommand}" CommandParameter="{Binding ElementName=MainTabControl}">
                            <Button.Content>
                                <fa:SvgAwesome Icon="Regular_WindowClose"/>
                            </Button.Content>
                        </Button>
                    </StackPanel>
                </TabItem.Header>

                <Button Content="Click Me" 
                        Style="{StaticResource PrimaryButton}" 
                        Width="150" Height="50"
                        RenderTransformOrigin="0.5,0.5">
                    <Button.RenderTransform>
                        <ScaleTransform x:Name="ButtonScale" ScaleY="1"/>
                    </Button.RenderTransform>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ButtonScale"
                                                     Storyboard.TargetProperty="ScaleY"
                                                     To="0.8" By="-0.01"
                                                     Duration="0:0:0.1"
                                                     AutoReverse="True"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>

            </TabItem>

        </TabControl>

    </DockPanel>

</Window>
